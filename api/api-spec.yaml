openapi: "3.0.2"
info:
  title: Employee Clocking System
  version: "0.1"
servers:
  - url: http://localhost:1323/api
    description: Dev Local Environment
tags:
  - name: Backoffice Dashboard
    description: API for backoffice dashboard implementation
  - name: Client Application
    description: API for client application implementation
paths:
  /employees:
    get:
      summary: Returns a list of employee.
      operationId: listEmployee
      tags:
        - "Backoffice Dashboard"
      responses:
          "200":
            description: success
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Employees"
          "401":
            $ref: '#/components/responses/Unauthorized'
          default:
            $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [backoffice]
    post:
      summary: Create new employee
      operationId: createEmployee
      tags:
        - "Backoffice Dashboard"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
              properties:
                name:
                  type: string
                job_title:
                  type: string
      responses:
          "201":
            description: success to insert
            headers:
              location:
                description: new resource url
                schema:
                  type: string
          "401":
            $ref: '#/components/responses/Unauthorized'
          default:
            $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [backoffice]
  /employees/{id}:
    get:
      summary: Get employee by ID
      operationId: getEmployee
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - "Backoffice Dashboard"
      responses:
          "200":
            description: success
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Employee"
          "401":
            $ref: '#/components/responses/Unauthorized'
          "404":
            $ref: '#/components/responses/NotFound'
          default:
            $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [backoffice]
    put:
      summary: Update employee 
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - "Backoffice Dashboard"
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/Employee"
      responses:
          "204":
            description: success
          "401":
            $ref: '#/components/responses/Unauthorized'
          "404":
            $ref: '#/components/responses/NotFound'
          default:
            $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [backoffice]
    patch:
      summary: Partially update employee 
      operationId: patchEmployee
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - "Backoffice Dashboard"
      responses:
          "204":
            description: success
          "401":
            $ref: '#/components/responses/Unauthorized'
          "404":
            $ref: '#/components/responses/NotFound'
          default:
            $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [backoffice]
    delete:
      summary: Delete employee by ID
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - "Backoffice Dashboard"
      responses:
          "204":
            description: success
          "401":
            $ref: '#/components/responses/Unauthorized'
          "404":
            $ref: '#/components/responses/NotFound'
          default:
            $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [backoffice]
  /clocks:
    get:
      summary: Get employee clock history
      operationId: listClock
      tags:
        - "Backoffice Dashboard"
        - "Client Application"
      responses:
          "200":
            description: success
            content:
              application/json:
                schema: 
                  $ref: "#/components/schemas/EmployeeClockHistories"
          "401":
            $ref: '#/components/responses/Unauthorized'
          default:
            $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [backoffice, client]
  /clock-in:
    post:
      summary: Employee start to work
      operationId: clockIn
      tags:
        - "Client Application"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/EmployeeClockHistory"
        "401":
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [client]
  /clock-out:
    post:
      summary: Employee stop to work
      operationId: clockOut
      tags:
        - "Client Application"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/EmployeeClockHistory"
        "401":
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - OAuth2: [client]
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode: # <---- OAuth flow(authorizationCode, implicit, password or clientCredentials)
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes:
            client: Grants client access
            backoffice: Grants backoffice access
  responses:
    NotFound:
      description: Resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnexpectedError:
        description: Unexpected error
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        job_title:
          type: string
        last_clock_in_at:
          type: string
          format: date-time
        last_clock_out_at:
          type: string
          format: date-time
    Employees:
      type: array
      # maxItems: 100
      items:
        $ref: "#/components/schemas/Employee"
    EmployeeClockHistory:
      type: object
      properties:
        id:
          type: integer
        employee_id:
          type: integer
        clock_in_at:
          type: string
          format: date-time
        clock_out_at:
          type: string
          format: date-time
        work_duration:
          type: string
        work_duration_minutes:
          type: integer
    EmployeeClockHistories:
      type: array
      items:
        $ref: "#/components/schemas/EmployeeClockHistory"
    Error:
      type: object
      required:
        - error_message
      properties:
        error_message:
          type: string
    

# Reference: https://swagger.io/docs/specification/
# Example: https://github.com/OAI/OpenAPI-Specification/blob/main/examples/v3.0/petstore.yaml