version: '3'

env:
  IMAGE_NAME: boilerplate-go-backend

dotenv: ['.env', '{{.ENV}}/.env.', '{{.HOME}}/.env']

tasks:
  run:
    desc: "run the project in dev local environment"
    deps: [compose, dbmigrate]
    cmds:
      - go run ./cmd/boilerplate-go-backend
  run-with-docker:
    desc: "run the project in dev local environment with docker"
    deps: [build-image, compose, dbmigrate]
    cmds:
      - docker run -it --rm --name my-running-app -p 1323:1323 $IMAGE_NAME
  compose:
    desc: "compose system component for local environemnt"
    cmds:
      - docker compose up -d
  clean:
    desc: "clean the dev local environment"
    cmds:
      - docker compose down -v --remove-orphans
  build-image:
    desc: "build docker image"
    cmds:
      - docker build -t $IMAGE_NAME .
  gen-dotenv:
    desc: "generate .env file from infra.Config struct"
    cmds:
      - go run ./tools/dotenv-gen > .env
      - cp .env .env_sample
  gen-oapi:
    desc: "generate open-api controller form api-spec.yaml"
    cmds:
      - rm -rf internal/generated/oapi
      - mkdir -p internal/generated/oapi
      - go run github.com/deepmap/oapi-codegen/v2/cmd/oapi-codegen@v2.1.0 --config tools/openapi-gen/config.yaml api/api-spec.yaml   
      - go mod tidy
  gen-entity:
    desc: "generate entity source code from database table"
    cmds:
      - rm -rf internal/generated/entity
      - rm -rf internal/generated/mock_entity
      - go run ./tools/entity-gen
  gen-converter:
    desc: "generate converter from DAO to Entity and vice-versa"
    cmds:
      - rm -rf internal/generated/converter
      - go run ./tools/converter-gen 
  create-migration:
    desc: "create new migration file at db/migration folder"
    cmds:
      - migrate create -ext sql -dir db/migrations -seq {{.NAME}}
    requires:
      vars: [NAME]
  dbmigrate:
    desc: "run database migration"
    cmds:
      - migrate -source file://db/migrations -database {{.APP_PG_SOURCE}} up
  dbseed:
    desc: "insert dummy data"
    cmds:
      - go run ./tools/dbseed 
  psql:
    desc: "postgres client"
    cmds:
      - docker compose exec -u postgres pg psql
silent: false


# Learn more at https://taskfile.dev/usage/